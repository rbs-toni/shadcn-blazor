@page "/docs/components/alert"
@using ShadcnBlazor.Docs.Pages.Docs.Components.Alert.Examples
@inherits ShadcnComponentBase
@inject IStringLocalizer<Index> Localizer

<DocsPageHeader Title="Alert" Breadcrumbs="_breadcrumbs.Items">
    <DocsPageHeaderDescription>
        @Localizer["Displays a callout for user attention."]
    </DocsPageHeaderDescription>
</DocsPageHeader>

<DocsPageContent>
    <DocsPreview PreviewComponent="@_alertDefault"
    CodePath="AlertDefault.razor" />

    <DocsPageSection Title="Examples">
        @foreach (var item in examples)
        {
            <DocsPageSection Title="@item.Title" Level="3">
                <DocsPreview PreviewComponent="@item.Template"
                             CodePath="@item.CodePath" />
            </DocsPageSection>
        }
    </DocsPageSection>
</DocsPageContent>

@code {
    [CascadingParameter]
    LayoutContext LayoutContext { get; set; } = default!;
    const string Component = "Alert";
    BreadcrumbCollection _breadcrumbs = new ComponentsBreadcrumbCollection("Alert");
    ComponentTemplate _alertDefault = new ComponentTemplate(typeof(AlertDefault));
    ComponentTemplate _alertDestructive = new ComponentTemplate(typeof(AlertDestructive));

    protected override void OnInitialized()
    {
        LayoutContext.SetLayoutOptions(
            pageTitle: "Alert",
            useSidebar: true,
            useOutline: true,
            useFooterLinks: true);
    }

    List<ComponentExample> examples = new List<ComponentExample>()
    {
        new ComponentExample(Component, "Primary", new ComponentTemplate(typeof(AlertPrimary))),
        new ComponentExample(Component, "Destructive", new ComponentTemplate(typeof(AlertDestructive))),
        new ComponentExample(Component, "Success", new ComponentTemplate(typeof(AlertSuccess))),
        new ComponentExample(Component, "Warning", new ComponentTemplate(typeof(AlertWarning))),
        new ComponentExample(Component, "Info", new ComponentTemplate(typeof(AlertInfo))),
        new ComponentExample(Component, "Soft", new ComponentTemplate(typeof(AlertSoft))),
        new ComponentExample(Component, "Bootstrap", new ComponentTemplate(typeof(AlertBootstrap))),
        new ComponentExample(Component, "Callout", new ComponentTemplate(typeof(AlertCallout))),
        new ComponentExample(Component, "With actions", new ComponentTemplate(typeof(AlertWithAction))),
    };
}

