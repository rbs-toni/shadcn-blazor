@namespace ShadcnBlazor
@inherits ShadcnComponentBase
@using TailwindMerge
@inject TwMerge TwMerge

@if (GroupContext == null || !GroupContext.IsOverflow(this))
{
    <span id="@Id"
          class="@(TwMerge.Merge(ClassValue))"
          style="@StyleValue"
          @ref=Ref
          @attributes=Attributes>
        <CascadingValue Value="_context" IsFixed="true">
            @ChildContent
        </CascadingValue>
    </span>
}

@code {
    const string DefaultClasses = "inline-flex items-center justify-center font-normal text-foreground select-none shrink-0 bg-secondary overflow-hidden";

    [Parameter]
    public AvatarSize Size { get; set; } = AvatarSize.Small;

    [Parameter]
    public AvatarShape Shape { get; set; } = AvatarShape.Circle;

    [CascadingParameter]
    AvatarGroupContext? GroupContext { get; set; }

    string? ClassValue => new CssBuilder(Class)
        .AddClass(DefaultClasses)
        .AddClass(Size.ToAttributeValue(false))
        .AddClass(Shape.ToAttributeValue(false))
        .Build();

    string? StyleValue => new StyleBuilder(Style)
        .AddStyle("z-index", CalculateZIndex().ToString())
        .Build();

    int CalculateZIndex()
    {
        if (GroupContext != null)
        {
            var idx = GroupContext.IndexOf(this);
            var max = GroupContext.Count;
            return max - idx;
        }
        return 0;
    }
}