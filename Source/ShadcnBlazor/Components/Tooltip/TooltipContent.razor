@namespace ShadcnBlazor
@inherits ShadcnComponentBase
@inject TwMerge TwMerge

<div id="@Id"
     class="@(TwMerge.Merge(ClassValue))"
     data-state="@DataState"
     data-side="@Side.ToAttributeValue()"
     data-align="@Side"
     role="dialog"
     style="@StyleValue"
     tabindex="-1"
     @ref="Ref"
     @attributes="Attributes">
    @ChildContent
    <VisuallyHidden role="tooltip">
        @AriaLabel
    </VisuallyHidden>
</div>

@code {
    const string DefaultClasses = "z-50 overflow-hidden rounded-md bg-primary px-3 py-1.5 text-xs text-primary-foreground animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2";

    [Parameter]
    public bool Show { get; set; }

    [Parameter]
    public FloatingSide Side { get; set; }

    [Parameter]
    public FloatingAlign Align { get; set; }

    [Parameter]
    public string? DataState { get; set; }

    /// <summary>
    /// By default, screenreaders will announce the content inside the component.
    /// If this is not descriptive enough, or you have content that cannot be announced, use aria-label as a more descriptive label.
    /// </summary>
    [Parameter]
    public string? AriaLabel { get; set; }

    [CascadingParameter]
    InternalTooltipContext? TooltipContext { get; set; }
}