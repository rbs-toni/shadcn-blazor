@namespace ShadcnBlazor
@inherits ShadcnComponentBase
@typeparam TValue where TValue : System.Numerics.INumber<TValue>
@inject IElementService ElementService

<SliderImpl TValue="TValue"
            OnSlideStart="OnSlideStartHandlerAsync"
            OnSlideMove="OnSlideMoveHandlerAsync"
            OnSlideEnd="OnSlideEndHandler"
            OnHomeKeyDown="OnHomeKeyDownHandler"
            OnEndKeyDown="OnEndKeyDownHandler"
            OnStepKeyDown="OnStepKeyDownHandler"
            Id="@Id"
            Style="@StyleValue"
            Class="@Class"
            dir="@Direction.ToAttributeValue(false)"
            data-orientation="horizontal">
    <CascadingValue Value="_orientationContext" IsFixed="true">
        @ChildContent
    </CascadingValue>
</SliderImpl>

@code {
    ForwardRef _forwardRef = new();
    [CascadingParameter]
    SliderRootContext<TValue>? RootContext { get; set; }

    [Parameter]
    public TValue? Min { get; set; }

    [Parameter]
    public TValue? Max { get; set; }

    [Parameter]
    public bool Inverted { get; set; }

    [Parameter]
    public Direction Direction { get; set; }

    [Parameter]
    public EventCallback<double> OnSlideStart { get; set; }

    [Parameter]
    public EventCallback<double> OnSlideMove { get; set; }

    [Parameter]
    public EventCallback OnSlideEnd { get; set; }

    [Parameter]
    public EventCallback<KeyboardEventArgs> OnHomeKeyDown { get; set; }

    [Parameter]
    public EventCallback<KeyboardEventArgs> OnEndKeyDown { get; set; }

    [Parameter]
    public EventCallback<(KeyboardEventArgs, int)> OnStepKeyDown { get; set; }
}